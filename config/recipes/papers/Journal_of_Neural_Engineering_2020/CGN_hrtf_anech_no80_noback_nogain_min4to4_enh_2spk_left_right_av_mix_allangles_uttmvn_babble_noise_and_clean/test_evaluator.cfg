[evaluator]
#the type of evaluation: single task or multi task
evaluator = multi_task
#state the tasks
# tasks = task_2spk task_2spk_tr task_2spk_dev
tasks = task_2spk_aad_quiet task_2spk_aad_min1 task_2spk_aad_min4 task_2spk task_2spk_clean
#The segment length
segment_length = full

[task_2spk]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = pit_sigmoid
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0 spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = testleftspec
right_features = testrightspec
spatial_features = testangles
recs1 = testrecs1spec
recs2 = testrecs2spec
#a space seperated list of target names used by the trainer
targets = multi_targets mix_to_mask
#a mapping between the target names and database sections
multi_targets = testtargets
#a mapping between the target names and database sections
mix_to_mask = testmixtomask

[task_2spk_clean]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = pit_sigmoid
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0 spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = testcleanleftspec
right_features = testcleanrightspec
spatial_features = testcleanangles
recs1 = testcleanrecs1spec
recs2 = testcleanrecs2spec
#a space seperated list of target names used by the trainer
targets = multi_targets mix_to_mask
#a mapping between the target names and database sections
multi_targets = testcleantargets
#a mapping between the target names and database sections
mix_to_mask = testcleanmixtomask

[task_2spk_tr]
#requested utterances for evaluation
requested_utts = 20000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = pit_sigmoid
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0_model spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = trainleftspec
right_features = trainrightspec
spatial_features = trainangles
recs1 = trainrecs1spec
recs2 = trainrecs2spec
#a space seperated list of target names used by the trainer
targets = multi_targets mix_to_mask
#a mapping between the target names and database sections
multi_targets = traintargets
#a mapping between the target names and database sections
mix_to_mask = trainmixtomask

[task_2spk_dev]
#requested utterances for evaluation
requested_utts = 5000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = pit_sigmoid
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0_model spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = devleftspec
right_features = devrightspec
spatial_features = devangles
recs1 = devrecs1spec
recs2 = devrecs2spec
#a space seperated list of target names used by the trainer
targets = multi_targets mix_to_mask
#a mapping between the target names and database sections
multi_targets = devtargets
#a mapping between the target names and database sections
mix_to_mask = devmixtomask

[task_2spk_tr_clean]
#requested utterances for evaluation
requested_utts = 20000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = pit_sigmoid
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0_model spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = traincleanleftspec
right_features = traincleanrightspec
spatial_features = traincleanangles
recs1 = traincleanrecs1spec
recs2 = traincleanrecs2spec
#a space seperated list of target names used by the trainer
targets = multi_targets mix_to_mask
#a mapping between the target names and database sections
multi_targets = traincleantargets
#a mapping between the target names and database sections
mix_to_mask = traincleanmixtomask

[task_2spk_dev_clean]
#requested utterances for evaluation
requested_utts = 5000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = pit_sigmoid
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0_model spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = devcleanleftspec
right_features = devcleanrightspec
spatial_features = devcleanangles
recs1 = devcleanrecs1spec
recs2 = devcleanrecs2spec
#a space seperated list of target names used by the trainer
targets = multi_targets mix_to_mask
#a mapping between the target names and database sections
multi_targets = devcleantargets
#a mapping between the target names and database sections
mix_to_mask = devcleanmixtomask

[task_2spk_aad_quiet]
#requested utterances for evaluation
requested_utts = 228
#the number of utterances that are processed simultaniously
batch_size = 4
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0 spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = aadquietleftspec
right_features = aadquietrightspec
spatial_features = aadquietangles
recs1 = aadquietrecs1spec
recs2 = aadquietrecs2spec
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aadquietleftspec

[task_2spk_aad_min1]
#requested utterances for evaluation
requested_utts = 228
#the number of utterances that are processed simultaniously
batch_size = 4
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0 spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = aadmin1leftspec
right_features = aadmin1rightspec
spatial_features = aadmin1angles
recs1 = aadmin1recs1spec
recs2 = aadmin1recs2spec
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aadmin1leftspec

[task_2spk_aad_min4]
#requested utterances for evaluation
requested_utts = 228
#the number of utterances that are processed simultaniously
batch_size = 4
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0 spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = aadmin4leftspec
right_features = aadmin4rightspec
spatial_features = aadmin4angles
recs1 = aadmin4recs1spec
recs2 = aadmin4recs2spec
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aadmin4leftspec

[task_2spk_aad2015_quiet]
#requested utterances for evaluation
requested_utts = 742
#the number of utterances that are processed simultaniously
batch_size = 14
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features recs1 recs2 spatial_features
#the outputs requested for this task
outputs = bin_est
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = conc0 conc1 conc2 conc3 main1 main2 bin_est1 bin_est2 bin_est
#for each node, state a model and a space separated list of inputs
#
conc0_model = concat
conc0_inputs = left_features right_features
#
conc1_model = concat
conc1_inputs = conc0 spatial_features
#
conc2_model = concat
conc2_inputs = conc1 recs1
#
main1_model = main
main1_inputs = conc2
#
bin_est1_model = outlayer
bin_est1_inputs = main1
#
conc3_model = concat
conc3_inputs = conc1 recs2
#
main2_model = main
main2_inputs = conc3
#
bin_est2_model = outlayer
bin_est2_inputs = main2
#
bin_est_model = concat
bin_est_inputs = bin_est1 bin_est2

#a mapping between the input names and database sections
left_features = aad2015quietleftspec
right_features = aad2015quietrightspec
spatial_features = aad2015quietangles
recs1 = aad2015quietrecs1spec
recs2 = aad2015quietrecs2spec
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aad2015quietleftspec