[evaluator]
#the type of evaluation: single task or multi task
evaluator = multi_task
#state the tasks
# tasks = task_2spk task_2spk_tr task_2spk_dev
tasks = task_2spk_aad_quiet task_2spk_aad_min1 task_2spk_aad_min4 task_2spk_aad2015_quiet task_2spk task_2spk_clean task_2spk_dev task_2spk_tr task_2spk_dev_clean task_2spk_tr_clean
#The segment length
segment_length = full

[task_2spk]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 50
#type of loss that should be used
loss_type = deepclusteringnoise
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = testleftspec
right_features = testrightspec
spatial_features = testangles
#a space seperated list of target names used by the trainer
targets = binary_targets rel_speech_targets usedbins noisybins
#a mapping between the target names and database sections
binary_targets = testtargets
#a mapping between the target names and database sections
rel_speech_targets = testrelspeechtargets
#a mapping between the target names and database sections
usedbins = testusedbins
#a mapping between the target names and database sections
noisybins = testnoisybins

[task_2spk_clean]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 10
#type of loss that should be used
loss_type = deepclusteringnoise
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = testcleanleftspec
right_features = testcleanrightspec
spatial_features = testcleanangles
#a space seperated list of target names used by the trainer
targets = binary_targets rel_speech_targets usedbins noisybins
#a mapping between the target names and database sections
binary_targets = testcleantargets
#a mapping between the target names and database sections
rel_speech_targets = testcleanrelspeechtargets
#a mapping between the target names and database sections
usedbins = testcleanusedbins
#a mapping between the target names and database sections
noisybins = testcleannoisybins

[task_2spk_tr]
#requested utterances for evaluation
requested_utts = 20000
#the number of utterances that are processed simultaniously
batch_size = 10
#type of loss that should be used
loss_type = deepclusteringnoise
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = trainleftspec
right_features = trainrightspec
spatial_features = trainangles
#a space seperated list of target names used by the trainer
targets = binary_targets rel_speech_targets usedbins noisybins
#a mapping between the target names and database sections
binary_targets = traintargets
#a mapping between the target names and database sections
rel_speech_targets = trainrelspeechtargets
#a mapping between the target names and database sections
usedbins = trainusedbins
#a mapping between the target names and database sections
noisybins = trainnoisybins

[task_2spk_dev]
#requested utterances for evaluation
requested_utts = 5000
#the number of utterances that are processed simultaniously
batch_size = 10
#type of loss that should be used
loss_type = deepclusteringnoise
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = devleftspec
right_features = devrightspec
spatial_features = devangles
#a space seperated list of target names used by the trainer
targets = binary_targets rel_speech_targets usedbins noisybins
#a mapping between the target names and database sections
binary_targets = devtargets
#a mapping between the target names and database sections
rel_speech_targets = devrelspeechtargets
#a mapping between the target names and database sections
usedbins = devusedbins
#a mapping between the target names and database sections
noisybins = devnoisybins

[task_2spk_tr_clean]
#requested utterances for evaluation
requested_utts = 20000
#the number of utterances that are processed simultaniously
batch_size = 10
#type of loss that should be used
loss_type = deepclusteringnoise
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = traincleanleftspec
right_features = traincleanrightspec
spatial_features = traincleanangles
#a space seperated list of target names used by the trainer
targets = binary_targets rel_speech_targets usedbins noisybins
#a mapping between the target names and database sections
binary_targets = traincleantargets
#a mapping between the target names and database sections
rel_speech_targets = traincleanrelspeechtargets
#a mapping between the target names and database sections
usedbins = traincleanusedbins
#a mapping between the target names and database sections
noisybins = traincleannoisybins

[task_2spk_dev_clean]
#requested utterances for evaluation
requested_utts = 5000
#the number of utterances that are processed simultaniously
batch_size = 10
#type of loss that should be used
loss_type = deepclusteringnoise
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = devcleanleftspec
right_features = devcleanrightspec
spatial_features = devcleanangles
#a space seperated list of target names used by the trainer
targets = binary_targets rel_speech_targets usedbins noisybins
#a mapping between the target names and database sections
binary_targets = devcleantargets
#a mapping between the target names and database sections
rel_speech_targets = devcleanrelspeechtargets
#a mapping between the target names and database sections
usedbins = devcleanusedbins
#a mapping between the target names and database sections
noisybins = devcleannoisybins

[task_2spk_aad_quiet]
#requested utterances for evaluation
requested_utts = 228
#the number of utterances that are processed simultaniously
batch_size = 4
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = aadquietleftspec
right_features = aadquietrightspec
spatial_features = aadquietangles
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aadquietleftspec

[task_2spk_aad_min1]
#requested utterances for evaluation
requested_utts = 228
#the number of utterances that are processed simultaniously
batch_size = 4
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = aadmin1leftspec
right_features = aadmin1rightspec
spatial_features = aadmin1angles
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aadmin1leftspec

[task_2spk_aad_min4]
#requested utterances for evaluation
requested_utts = 228
#the number of utterances that are processed simultaniously
batch_size = 4
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n1
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n1

#a mapping between the input names and database sections
left_features = aadmin4leftspec
right_features = aadmin4rightspec
spatial_features = aadmin4angles
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aadmin4leftspec

[task_2spk_aad2015_quiet]
#requested utterances for evaluation
requested_utts = 742
#the number of utterances that are processed simultaniously
batch_size = 14
#type of loss that should be used
loss_type = dummy_loss
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = left_features right_features spatial_features
#the outputs requested for this task
outputs = bin_emb noise_filter
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 n1 n2 bin_emb noise_filter
#for each node, state a model and a space separated list of inputs
#
n0_model = concat
n0_inputs = left_features right_features
#
n1_model = concat
n1_inputs = n0 spatial_features
#
n2_model = main
n2_inputs = n1
#
bin_emb_model = outlayer
bin_emb_inputs = n2
#
noise_filter_model = noisefilterlayer
noise_filter_inputs = n2

#a mapping between the input names and database sections
left_features = aad2015quietleftspec
right_features = aad2015quietrightspec
spatial_features = aad2015quietangles
#a space seperated list of target names used by the trainer
targets = dummy
#a mapping between the target names and database sections
dummy = aad2015quietleftspec