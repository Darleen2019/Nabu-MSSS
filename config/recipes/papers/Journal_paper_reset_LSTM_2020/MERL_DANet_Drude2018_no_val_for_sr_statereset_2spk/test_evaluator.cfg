[evaluator]
#the type of evaluation: single task or multi task
evaluator = multi_task
#state the tasks
# tasks = task_2spk task_2spk_tr task_2spk_dev
tasks = task_2spk task_sr task_sr_norm_length_attr task_sr_kmeans task_sr_norm_length_attr_kmeans task_sr_oracle task_sr_oracle_norm_length_attr
#The segment length
segment_length = full

[task_2spk]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = deepattractornet
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#a space separated list of the inputs of the (hybrid) model
inputs = features
#the outputs requested for this task
outputs = bin_emb
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 bin_emb
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
bin_emb_model = outlayer
bin_emb_inputs = n0

#a mapping between the input names and database sections
features = testspec
#a space seperated list of target names used by the trainer
targets = binary_targets multi_targets usedbins mix_to_mask
#a mapping between the target names and database sections
binary_targets = testtargets
#a mapping between the target names and database sections
multi_targets = testmultitargets
#a mapping between the target names and database sections
usedbins = testusedbins
#a mapping between the target names and database sections
mix_to_mask = testmixtomask

[task_sr]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = dummy
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#
output_handling_type = speaker_verification
#a space separated list of the inputs of the (hybrid) model
inputs = features
#the outputs requested for this task
outputs = speaker_bin_embeddings
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 speaker_bin_embeddings
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
speaker_bin_embeddings_model = speaker_embeddings_model
speaker_bin_embeddings_inputs = n0

#a mapping between the input names and database sections
features = testspec
#a space seperated list of target names used by the trainer
targets = dummy_targets
#a mapping between the target names and database sections
dummy_targets = testspec
scorers_names = task_sr task_sr_mvn_per_mix_spk task_sr_100trials task_sr_mvn_per_mix_spk_100trials

[task_sr_norm_length_attr]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = dummy
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#
output_handling_type = speaker_verification
#a space separated list of the inputs of the (hybrid) model
inputs = features
#the outputs requested for this task
outputs = speaker_bin_embeddings
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 speaker_bin_embeddings
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
speaker_bin_embeddings_model = speaker_embeddings_model
speaker_bin_embeddings_inputs = n0

#a mapping between the input names and database sections
features = testspec
#a space seperated list of target names used by the trainer
targets = dummy_targets
#a mapping between the target names and database sections
dummy_targets = testspec
scorers_names = task_sr_norm_length_attr task_sr_norm_length_attr_100trials task_sr_norm_length_attr_mvn_per_mix_spk

[task_sr_kmeans]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = dummy
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#
output_handling_type = speaker_verification
#a space separated list of the inputs of the (hybrid) model
inputs = features
#the outputs requested for this task
outputs = speaker_bin_embeddings
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 speaker_bin_embeddings
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
speaker_bin_embeddings_model = speaker_embeddings_model
speaker_bin_embeddings_inputs = n0

#a mapping between the input names and database sections
features = testspec
#a space seperated list of target names used by the trainer
targets = dummy_targets
#a mapping between the target names and database sections
dummy_targets = testspec
scorers_names = task_sr_kmeans task_sr_kmeans_100trials

[task_sr_norm_length_attr_kmeans]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = dummy
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#
output_handling_type = speaker_verification
#a space separated list of the inputs of the (hybrid) model
inputs = features
#the outputs requested for this task
outputs = speaker_bin_embeddings
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 speaker_bin_embeddings
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
speaker_bin_embeddings_model = speaker_embeddings_model
speaker_bin_embeddings_inputs = n0

#a mapping between the input names and database sections
features = testspec
#a space seperated list of target names used by the trainer
targets = dummy_targets
#a mapping between the target names and database sections
dummy_targets = testspec
scorers_names = task_sr_norm_length_attr_kmeans task_sr_norm_length_attr_kmeans_100trials task_sr_norm_length_attr_kmeans_mvn_per_mix_spk task_sr_norm_length_attr_kmeans_same_gender task_sr_norm_length_attr_kmeans_only_m task_sr_norm_length_attr_kmeans_only_f task_sr_norm_length_attr_kmeans_competing_spk task_sr_norm_length_attr_kmeans_competing_spk_same_gender

[task_sr_oracle]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = dummy
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#
output_handling_type = speaker_verification
#a space separated list of the inputs of the (hybrid) model
inputs = features binary_targets usedbins
#the outputs requested for this task
outputs = attractor
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 speaker_bin_embeddings attractor
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
speaker_bin_embeddings_model = speaker_embeddings_model
speaker_bin_embeddings_inputs = n0
#
attractor_model = attractor_layer
attractor_inputs = speaker_bin_embeddings binary_targets usedbins

#a mapping between the input names and database sections
features = testspec
# this is set to be an input but it is oracle knowledge
binary_targets = testtargets
usedbins = testusedbins
#a space seperated list of target names used by the trainer
targets = dummy_targets
#a mapping between the target names and database sections
dummy_targets = testspec
scorers_names = task_sr_oracle task_sr_oracle_100trials task_sr_oracle_mvn_per_mix_spk task_sr_oracle_mvn_per_mix_spk_100trials

[task_sr_oracle_norm_length_attr]
#requested utterances for evaluation
requested_utts = 3000
#the number of utterances that are processed simultaniously
batch_size = 30
#type of loss that should be used
loss_type = dummy
#name of the evaluator that should be used
evaluator = task_loss_evaluator
#
output_handling_type = speaker_verification
#a space separated list of the inputs of the (hybrid) model
inputs = features binary_targets usedbins
#the outputs requested for this task
outputs = attractor
#a space separated list of the nodes of the (hybrid) model (includes
#the output nodes)
nodes = n0 speaker_bin_embeddings attractor
#for each node, state a model and a space separated list of inputs
#
n0_model = main
n0_inputs = features
#
speaker_bin_embeddings_model = speaker_embeddings_model
speaker_bin_embeddings_inputs = n0
#
attractor_model = attractor_layer
attractor_inputs = speaker_bin_embeddings binary_targets usedbins

#a mapping between the input names and database sections
features = testspec
# this is set to be an input but it is oracle knowledge
binary_targets = testtargets
usedbins = testusedbins
#a space seperated list of target names used by the trainer
targets = dummy_targets
#a mapping between the target names and database sections
dummy_targets = testspec
scorers_names = task_sr_oracle_norm_length_attr task_sr_oracle_norm_length_attr_100trials task_sr_oracle_norm_length_attr_mvn_per_mix_spk task_sr_oracle_norm_length_attr_mvn_per_mix_spk_100trials